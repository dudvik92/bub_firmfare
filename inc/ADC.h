#ifndef ADC_H
#define ADC_H

#include "MDR32F9Qx_adc.h"

#define U_OP             3.3 //опорное напряжение
#define R_ADC            4095 //количество уровней напряжения различаемого АЦП
#define COEFFICIENT_ADC  (U_OP / R_ADC) //коэффициент преобразования в вольты

#define SIZE_ARR          100         //размер массива для подсчета среднего арифметического показаний АЦП

// ToDo: Добавить каналы АЦП для датчиков температуры и второга датчика уровня топлива РБ


typedef struct {
	uint32_t adc_channel; // канал АЦП
	float value; //конечный результат измерений
	uint8_t error_sensor; // переменная для хранения аварийного состояния датчика. 
												// Выставляется внешними функциями в зависимости от особенностей датчика
	uint16_t value_arr[SIZE_ARR]; //массив для подсчета среднего арифметического
	unsigned char arr_index; //индекс элементов массива
	uint32_t sum; //сумма для подсчета среднего арифметического
} Sensor;
	
int read_adc(uint32_t Channel); // считывание значения АЦП с датчика
float scan_sensor(Sensor *sensor); // Функция обработки выбранного датчика

#endif
